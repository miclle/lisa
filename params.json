{
  "name": "Lisa",
  "tagline": "Lisa is a development tool for the Go Programming Language. It automatically runs your command and (will eventually) hot compile your code when it detects file system changes.",
  "body": "# lisa\r\n\r\n[![Build Status](https://travis-ci.org/miclle/lisa.svg?branch=master)](https://travis-ci.org/miclle/lisa)\r\n\r\n## Installation\r\n\r\nAssuming you have a working Go environment and `GOPATH/bin` is in your `PATH`, `lisa` is a breeze to install:\r\n\r\n```\r\ngo get github.com/miclle/lisa\r\n```\r\n\r\nThen verify that `lisa` was installed correctly:\r\n\r\n```\r\nlisa -h\r\n```\r\n\r\n## Commands\r\n\r\n### server, s\r\n\r\nServing Static Files with HTTP\r\n\r\n```\r\nlisa s\r\n```\r\n\r\nOPTIONS:\r\n\r\nflag   | short | default | description\r\n-------|-------|---------|---------------------------------------------\r\n--port | -p    | 8080    | Serving Static Files with HTTP used port.\r\n--dir  | -d    | ./      | Serving Static Files with HTTP in directory.\r\n--bind | -b    | 0.0.0.0 | Serving Static Files with HTTP bind address.\r\n\r\nrun `lisa s -h` get more info\r\n\r\n### watch, w\r\n\r\nStarting a file system watcher then execute a command\r\n\r\n```\r\nlisa w\r\n```\r\n\r\nOPTIONS:\r\n\r\nflag      | short | default | description\r\n----------|-------|---------|---------------------------------------------\r\n--command | -c    | \t\t\t  | Execute the command when the directory files modified.\r\n--path    | -p    | ./      | Watching the directory or file.\r\n--event   | -e    | create,rename,write,remove | Execute the command when the events was trigger: <br /> create,rename,write,remove,chmod\r\n--delay   | -d    | 1       | Execute the command after a delay second.\r\n\r\nrun `lisa w -h` get more info\r\n\r\n### home\r\n\r\nGo to the document website\r\n\r\n```\r\nlisa home\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}